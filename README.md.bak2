# Kubernetes Flask App Tutorial

A complete tutorial for deploying a Flask HTTP server to Kubernetes using k3d.

## Quick Start

**For automated deployment:**
```bash
git clone https://github.com/takobaba/k3d-flask-aws-deb-tutorial.git
cd k3d-flask-aws-deb-tutorial
./scripts/setup-debian.sh  # Install prerequisites
newgrp docker              # Refresh permissions
./scripts/deploy.sh         # Deploy everything
```

## Prerequisites

### System Requirements
- Debian 12 or Ubuntu VM/instance
- 2GB+ RAM, 10GB+ disk space
- Internet connection

### Required Tools
- Docker, kubectl, k3d - installed by setup script
- Git for cloning repository

## Setup Instructions

### Automated Setup
```bash
git clone https://github.com/takobaba/k3d-flask-aws-deb-tutorial.git
cd k3d-flask-aws-deb-tutorial
chmod +x scripts/setup-debian.sh
./scripts/setup-debian.sh
newgrp docker  # IMPORTANT: Refresh permissions
./scripts/deploy.sh
```

### Manual Setup
```bash
sudo apt update
sudo apt install -y docker.io git python3 python3-pip
sudo usermod -aG docker $USER
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl && sudo mv kubectl /usr/local/bin/
curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
newgrp docker
```

## Running the Application

### Quick Deployment
```bash
./scripts/deploy.sh
```

### Manual Steps
```bash
# Build and deploy
cd app && docker build -t flask-app:latest . && cd ..
k3d cluster create mycluster
k3d image import flask-app:latest --cluster mycluster
kubectl apply -f kubernetes/
kubectl wait --for=condition=ready pod -l app=flask-app --timeout=60s
```

### Testing
```bash
kubectl port-forward service/flask-service 8081:80 &
curl http://localhost:8081        # Returns: amazon
curl http://localhost:8081/healthcheck  # Returns: OK
kill %1  # Stop port forwarding
```

## Troubleshooting

### ImagePullBackOff Error
```bash
# Check if image exists in k3d
docker exec k3d-mycluster-server-0 crictl images | grep flask-app
# If not found, re-import
k3d image import flask-app:latest --cluster mycluster
kubectl rollout restart deployment flask-app
```

### Docker Permission Denied
```bash
sudo usermod -aG docker $USER
newgrp docker
```

### Port Already in Use
```bash
kubectl port-forward service/flask-service 8082:80  # Use different port
```

### Cluster Issues
```bash
k3d cluster delete mycluster
docker system prune -f
k3d cluster create mycluster
```

### Debugging Commands
```bash
kubectl get pods -o wide
kubectl logs -l app=flask-app
kubectl describe pods -l app=flask-app
kubectl get events --sort-by=.metadata.creationTimestamp
```

## Cleanup and Destruction

### Quick Cleanup
```bash
./scripts/cleanup.sh
```

### Manual Cleanup
```bash
kubectl delete -f kubernetes/
k3d cluster delete mycluster
docker rmi flask-app:latest
```

### Complete System Cleanup
```bash
k3d cluster delete --all
docker system prune -af
docker volume prune -f
```

## Project Structure

```
k3d-flask-aws-deb-tutorial/
â”œâ”€â”€ README.md                    # Complete guide
â”œâ”€â”€ DEPLOYMENT-GUIDE.md          # Step-by-step instructions
â”œâ”€â”€ DESIGN-DECISIONS.md          # Architecture rationale
â”œâ”€â”€ app/                         # Flask application
â”œâ”€â”€ kubernetes/                  # K8s manifests
â””â”€â”€ scripts/                     # Automation scripts
```

## Architecture

```
Client â”€â”€â–¶ flask-service â”€â”€â–¶ flask-app (2 replicas)
           (NodePort)        (Load Balanced)
                â”‚
                â–¼
           k3d cluster
```

## Success Criteria

âœ… Flask app responds with "amazon" on /
âœ… Health check responds with "OK" on /healthcheck
âœ… 2 pods running and load-balanced
âœ… Service accessible via port-forward
âœ… Can deploy, test, and cleanup successfully

## Key Features

- Container best practices with minimal Dockerfile
- Kubernetes deployments, services, and replicas
- Local k3d development environment
- Load balancing and service discovery
- Comprehensive troubleshooting guide
- Complete automation scripts

**See DEPLOYMENT-GUIDE.md for detailed steps**
**See DESIGN-DECISIONS.md for architecture rationale**

Your Flask app is now running in Kubernetes! ðŸš€
